on:
  push:
    branches-ignore:
      - 'ga-ignore-'
  pull_request:
    branches-ignore:
      - 'ga-ignore-'

env:
  MIRROR: SIMLUKE/actions_playground_mirror
  MIRROR_URL: git@github.com:SIMLUKE/actions_playground_mirror.git
  EXECUTABLES: "mysh test"

jobs:
  is_not_mirror:
    runs-on: ubuntu-latest
    steps:
    - name: exit if mirror
      run: |
          echo $MIRROR
          echo $GITHUB_REPOSITORY
          if [[ env.GITHUB_REPOSITORY == env.MIRROR ]]; then
            exit 1
          fi
  
  check_coding_style:
    runs-on: ubuntu-latest
    needs: is_not_mirror
    container:
      image: ghcr.io/epitech/coding-style-checker:latest
    steps:
    - uses: actions/checkout@v3
    - name: Run coding style
      run: check.sh $(pwd) $(pwd)
    - name: print errors
      run: |
        while IFS= read -r line
        do
          IFS=':' read -ra error_code <<< "${line[0]}"
          echo "::error file=${error_code[0]},line=${error_code[1]},title=${error_code[2]} coding style error $error::${error_code[3]}"
        done < coding-style-reports.log
        if [[ -s coding-style-reports.log ]]; then
          exit 1
        fi
        
  check_program_compilation:
    runs-on: ubuntu-latest
    needs: check_coding_style
    container:
      image: epitechcontent/epitest-docker
    steps:
    - uses: actions/checkout@v3
    - name: Build
      run: make
    - name: check binary
      run: |
        IFS=' ' read -ra ADDR <<< $EXECUTABLES
        for i in "${ADDR[@]}";
        do
            if [ -f $i ] && [ -x $i ]; then
                exit 0
            fi
        done
        exit 1
  
  run_tests:
    runs-on: ubuntu-latest
    needs: check_program_compilation
    container:
      image: epitechcontent/epitest-docker
    steps:
    - uses: actions/checkout@v3
    - name: Build
      run: make
    - name: Run_tests
      run: make tests_run

  push_to_mirror:
    runs-on: ubuntu-latest
    if: ${{ github.event_name }} == "push"
    needs: run_tests
    steps:
    - uses: actions/checkout@v3
      with:
         fetch-depth: 0
    - uses: pixta-dev/repository-mirroring-action@v1
      with:
        target_repo_url:
          ${{ env.MIRROR_URL }}
        ssh_private_key:
          ${{ secrets.GIT_SSH_PRIVATE_KEY }}
